apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "alumet-relay-server.fullname" . }}
spec:
  strategy:
    rollingUpdate:
  selector:
    matchLabels:
      app: alumet-relay-server
  template:
    metadata:
      {{- if .Values.plugins.prometheusExporter.enable }}
      annotations:
        prometheus.io/scrape: 'true'
      {{ end }}
      labels:
        app: alumet-relay-server
        {{ include "alumet-relay-server.labels" . | nindent 8 }}
    spec:
    {{- if .Values.plugins.influxdb.enable }}
      {{- if not .Values.plugins.influxdb.host }}
      # activate init containers only when influxdb plugin is activated and if influxdb is deployed in this chart
      initContainers:
        - name: wait-for-influxdb
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command: [
            'sh',
            '-c',
            'until wget -nv -t1 --spider "http://{{ .Release.Name }}-influxdb2:80/health"; do echo "Waiting for influxdb service to be running"; sleep 2; done;'
          ]
      {{- end }}
    {{- end }}
      containers:
        - name: alumet-relay-server
          image: {{ .Values.global.image.registry }}/alumet-agent:{{ .Values.image.version }}_{{ .Values.image.osVersion }}
          args: ["--config", "/etc/alumet/alumet-agent.toml"]
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "{{ .Values.resources.memory }}"
              cpu: "{{ .Values.resources.cpu }}"
          volumeMounts:
            - name: config
              mountPath: /etc/alumet/alumet-agent.toml
              subPath: config
          env:
            - name: RUST_LOG
              value: "{{ .Values.env.RUST_LOG }}"
            - name: RUST_BACKTRACE
              value: "{{ .Values.env.RUST_BACKTRACE }}"
            - name: INFLUX_TOKEN
              {{- if .Values.plugins.influxdb.enable }}
              valueFrom:
                secretKeyRef:
                  {{- if .Values.plugins.influxdb.existingSecret }}
                  name: {{ .Values.plugins.influxdb.existingSecret }}
                  {{- else }}
                  # use the default secret created by influxdb
                  name: {{ .Release.Name }}-influxdb2-auth
                  {{- end }}
                  key: admin-token
              {{- else }}
              value: "not-needed"
              {{- end }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: relay
            {{- if .Values.plugins.prometheusExporter.enable }}
            - containerPort: {{ .Values.plugins.prometheusExporter.port }}
              name: "exporter"
            {{ end }}
          securityContext:
            capabilities:
              add: [{{ .Values.securityContext.capabilities }}]
      volumes:
        - name: config
          configMap:
          {{- if .Values.configMap.name }}
            # a config map is created before deployment
            name: {{ .Values.configMap.name }}
          {{- else }}
            name: {{ template "alumet-relay-server.fullname" . }}-config            
          {{- end }}
      {{- if .Values.global.secret }}
      imagePullSecrets:
        - name: {{ .Values.global.secret }}
      {{- end }}
      tolerations:
        - key: "master"
          operator: "Exists"
          effect: "NoSchedule"
      {{- if .Values.nodeSelector.nodeLabelValue }} 
      nodeSelector:
        {{ .Values.nodeSelector.nodeLabelName }}: {{ .Values.nodeSelector.nodeLabelValue }}
      {{- end }}